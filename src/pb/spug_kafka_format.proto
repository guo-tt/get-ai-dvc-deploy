/*
This file defines the protobuf encoding for data points sent to Kafka by Chrono.
*/
syntax = "proto3";

package pb;

// import "google/protobuf/timestamp.proto";

message Timestamp {
  // Represents seconds of UTC time since Unix epoch
  // 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
  // 9999-12-31T23:59:59Z inclusive.
  int64 seconds = 1;

  // Non-negative fractions of a second at nanosecond resolution. Negative
  // second values with fractions must still have non-negative nanos values
  // that count forward in time. Must be from 0 to 999,999,999
  // inclusive.
  int32 nanos = 2;
}

message Sample {
  string Name = 1;
  double Value = 2;
  Timestamp Timestamp = 3;
  map<string, string> Tags = 4;

  // SequenceID is a legacy field that was initially intended to support data
  // points sent by Aurora's SPUG apps (see
  // https://code.in.spdigital.sg/sp-digital/energy-framework/blob/5fdf14891170080210344ac4b579adc4ede05ea8/pb/spugdata.proto).
  // This field is currently not used in Chrono and might be deprecated in
  // future depending on demand from Aurora's use case.
  uint64 SequenceID = 5;

  // Annotations are commentary or explanatory metadata for a Sample.
  // They are currently passed through and not saved in Chrono until we figure
  // out how Chrono should handle annotations.
  // The current use case is for an out-of-band Kafka consumer to receive
  // annotated Samples for its own processing.
  map<string, string> Annotations = 6;
}

message Samples {
  repeated Sample Samples = 1;
}
