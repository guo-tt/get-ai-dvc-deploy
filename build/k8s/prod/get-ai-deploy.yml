---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mlflow-server
  labels:
    app: mlflow-server
spec:
  selector:
    matchLabels:
      app: mlflow-server
  strategy:
    type: Recreate
  replicas: 1
  template:
    metadata:
      labels:
        app: mlflow-server
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: mlflow-server
        image: spdadocker.azurecr.io/spdigital-data/getai
        args: 
        - mlflow
        - server
        - --host
        - 0.0.0.0
        - --port
        - "5000"
        - --backend-store-uri
        - sqlite:////mnt/mlflow-db/mlflow.db
        - --default-artifact-root
        - file:////mnt/mlflow-data/artifacts
        imagePullPolicy: Always
        resources:
          requests:
            memory: "1024Mi"
            cpu: "100m"
          limits:
            memory: "1024Mi"
            cpu: "500m"
        env:
        - name: LOG_LEVEL
          value: DEBUG
        - name: KUBE_ENV
          value: "{kube-env}"
        - name: JENKINS_BUILD
          value: "{jenkins-build}"
        - name: GIT_COMMIT
          value: "{git-commit}"
        ports:
        - containerPort: 5000
        readinessProbe:
          # an http probe
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 45
          timeoutSeconds: 20
        livenessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 60
          timeoutSeconds: 30
        volumeMounts:
        - name: secret-volume
          mountPath: /apps/secret
          readOnly: true
        - name: mlflow-data
          mountPath: /mnt/mlflow-data
        - name: mlflow-db
          mountPath: /mnt/mlflow-db
      volumes:
      - name: secret-volume
        secret:
          secretName: getai-secret
      - name: mlflow-data
        persistentVolumeClaim:
          claimName: get-ai-mlflow-data
      - name: mlflow-db
        persistentVolumeClaim:
          claimName: get-ai-mlflow-db
      restartPolicy: Always
      serviceAccountName: deployment

---

kind: Service
apiVersion: v1
metadata:
  name: mlflow-server
  labels:
    app: mlflow-server
spec:
  type: ClusterIP
  ports:
  - port: 5000
    protocol: TCP
  selector:
    app: mlflow-server
